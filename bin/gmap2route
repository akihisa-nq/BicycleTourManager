#!/usr/bin/ruby
# coding: utf-8

$: << File.join(File.dirname(__FILE__), "../lib")

require "bicycle_tour_manager"

GNUPLOT = ENV["GNUPLOT"]
FONT = ENV["FONT"]

CACHE_DIR = ENV["BICYCLE_TOUR_MANAGER_CACHE"] || File.dirname(__FILE__)

PLOT_ELEVATION_MIN = -100
PLOT_ELEVATION_MAX = 1100

INPUT_FILE = ARGV.shift
INPUT_DIR = File.dirname(INPUT_FILE)

geo_cache = BTM::PStoreCache.new("#{CACHE_DIR}/cache_geocode.db")
gmap_uri_parser = BTM::GoogleMapUriParser.new(geo_cache)

tour = BTM::Tour.new
File.open(INPUT_FILE, "r:utf-8") do |file|
	file.each_line do |line|
		line.strip!

		if line =~ /^"PC(\d+)":(.*)$/
			route_cache = BTM::PStoreCache.new("#{CACHE_DIR}/cache_route.db")
			ele_cache = BTM::PStoreCache.new("#{CACHE_DIR}/cache_elevation.db")

			route = gmap_uri_parser.parse_uri($2)
			route.search_route(route_cache, ele_cache)
			route.index = $1
			tour.routes << route
		end
	end
end
tour.sort!

plotter = BTM::AltitudePloter.new(GNUPLOT, INPUT_DIR)
plotter.elevation_max = PLOT_ELEVATION_MAX
plotter.elevation_min = PLOT_ELEVATION_MIN
plotter.font = FONT

tour.routes.each do |route|
	plotter.plot(route, "#{INPUT_DIR}/PC#{route.index}.png")
end

BTM::GpxStream.write_routes("#{INPUT_DIR}/route.gpx", tour)
BTM::RouteGuide.create_template("#{INPUT_DIR}/route_template.txt", tour)

